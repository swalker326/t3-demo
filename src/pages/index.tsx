import { useAuth, useClerk } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { api, type RouterOutputs } from "~/utils/api";
import { formatDistanceToNow } from "date-fns";

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = ({ post, author }: PostWithUser) => {
  return (
    <div key={post.id} className="flex items-center gap-4">
      {author.profileImageUrl && (
        <Image
          width={60}
          height={60}
          className="rounded-full"
          src={author?.profileImageUrl}
          alt="profile image"
        />
      )}
      <div className="flex flex-col gap-2">
        <div className={"flex gap-1"}>
          <span className="font-light">@{author.username}</span>
          <span>Â·</span>
          <span className="font-thin">
            {formatDistanceToNow(new Date(post.createdAt))}
          </span>
        </div>
        <h3 className="font-bold">{post.content}</h3>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const { data } = api.posts.getAll.useQuery();
  const { signOut, openSignIn, user } = useClerk();
  const { isSignedIn } = useAuth();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen w-full flex-col items-center bg-gradient-to-b from-[#2e026d] to-[#15162c] text-slate-300">
        <div className="container max-w-3xl ">
          <div className="flex justify-between pb-3">
            <h1 className="text-3xl font-bold">Chirp</h1>
            {!isSignedIn ? (
              <button onClick={() => openSignIn()}>Sign In</button>
            ) : (
              // eslint-disable-next-line @typescript-eslint/no-misused-promises
              <button onClick={() => signOut()}>Sign Out</button>
            )}
          </div>
          <div className="mb-4 flex gap-2 ">
            {user?.profileImageUrl && (
              <Image
                width={60}
                height={60}
                className="rounded-full"
                src={user?.profileImageUrl}
                alt="profile image"
              />
            )}
            <input
              className=" w-full flex-grow bg-transparent outline-none"
              placeholder="Chirp"
            />
          </div>
          <div>
            {data?.map((fullPostWithAuthor) => (
              <PostView
                key={fullPostWithAuthor.post.id}
                {...fullPostWithAuthor}
              />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
